/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.Eployee;

import DAO.LoaiSanPhamDAO;
import DAO.SanPhamDAO;
import MODAL.LoaiSanPham;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import javax.swing.JLabel;

import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;

import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import modal.SanPham;


public class searchScreen extends javax.swing.JFrame {

    SanPhamDAO sp = new SanPhamDAO();
    LoaiSanPhamDAO LSP = new LoaiSanPhamDAO();
    /**
     * Creates new form productFrame
     */
    public searchScreen() {
        initComponents();
        setLocationRelativeTo(null);
        loadScreen();
        loadProducts();

    }


    private void loadProductDetails(int id) {
        SanPham s = sp.findById(id);
        tfMaSP.setText(s.getMaSanPham().toString());
        tfTenSP.setText(s.getTenSanPham());
        tfLoaiSP.setText(LSP.GetNameByID(s.getLoaiSanPham()));
        tfGiaBan.setText(String.format("%,.0f", s.getGia()));
        tfSLTon.setText(String.valueOf(s.getSlTon()));
        tfNhaCC.setText(s.getMaNhaCungCap().toString());
        tfMoTa.setText(s.getMoTa());
        String imgPath = s.getAnh();
        if (imgPath != null && !imgPath.isEmpty()) {
            ImageIcon icon = new ImageIcon(getClass().getResource(imgPath));
            Image img = icon.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
            btnIMG.setIcon(new ImageIcon(imgPath));
        }   
        else 
        {
            ImageIcon icon = new ImageIcon(getClass().getResource("/resources/product/empty-img.png"));
            Image img = icon.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
            btnIMG.setIcon(new ImageIcon(img));

        }
    }

    private void loadCategories() {
        cbbCategory.removeAllItems();
        cbbCategory.addItem("Tất cả");
        List<LoaiSanPham> ct = LSP.getAll();
       for(LoaiSanPham x : ct) {
                cbbCategory.addItem(x.getTenLoaiSanPham());
            }
    }

    private void loadProducts() 
    {
        DefaultTableModel model = (DefaultTableModel) tableProduct.getModel();
        model.setRowCount(0);

        String ten = "where tenSanPham Like '%" +tfSeacrh.getText() +"%'";
        if (cbbCategory.getSelectedIndex()!=0) ten+= " AND loaiSanPham ="+LSP.GetIDByName(cbbCategory.getSelectedItem().toString());
        if (cbbPrice.getSelectedIndex()==1) ten+= " AND gia < 10000";
        else if (cbbPrice.getSelectedIndex()==2)  ten+= " AND gia BETWEEN 10000 AND 100000";
        else if (cbbPrice.getSelectedIndex()==3) ten+= " AND gia BETWEEN 100000 AND 200000";
        else if (cbbPrice.getSelectedIndex()==4) ten+= " AND gia > 200000";
        List<SanPham> list = sp.searchProducts(ten);
        model.setRowCount(0);
        for(SanPham x : list)
        {
            model.addRow(new Object[]{
                   x.getMaSanPham(),
                   x.getTenSanPham(),
                  x.getLoaiSanPham()
                });
        }
       tableProduct.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnSearch = new javax.swing.JPanel();
        pnCRUD = new javax.swing.JPanel();
        lbTitleBill = new javax.swing.JLabel();
        cbbPrice = new javax.swing.JComboBox<>();
        tfSeacrh = new javax.swing.JTextField();
        cbbCategory = new javax.swing.JComboBox<>();
        pnCategori = new javax.swing.JPanel();
        lbTitleListProduct = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProduct = new javax.swing.JTable();
        pnDetail = new javax.swing.JPanel();
        lbTitlleDetail = new javax.swing.JLabel();
        tfMaSP = new javax.swing.JTextField();
        tfSLTon = new javax.swing.JTextField();
        tfTenSP = new javax.swing.JTextField();
        tfGiaBan = new javax.swing.JTextField();
        jlabel12 = new javax.swing.JLabel();
        jlabel7 = new javax.swing.JLabel();
        jlabel8 = new javax.swing.JLabel();
        jlabel24 = new javax.swing.JLabel();
        jlabel9 = new javax.swing.JLabel();
        jlabel11 = new javax.swing.JLabel();
        tfNhaCC = new javax.swing.JTextField();
        btnIMG = new javax.swing.JButton();
        tfLoaiSP = new javax.swing.JTextField();
        lbSuggest = new javax.swing.JLabel();
        jlabel14 = new javax.swing.JLabel();
        tfMoTa = new javax.swing.JTextField();

        setBackground(new java.awt.Color(245, 247, 250));
        setResizable(false);
        setSize(new java.awt.Dimension(1180, 720));
        getContentPane().setLayout(null);

        pnSearch.setBackground(new java.awt.Color(245, 247, 250));
        pnSearch.setPreferredSize(new java.awt.Dimension(1180, 720));
        pnSearch.setLayout(null);

        pnCRUD.setBackground(new java.awt.Color(153, 204, 255));
        pnCRUD.setForeground(new java.awt.Color(255, 255, 255));
        pnCRUD.setRequestFocusEnabled(false);
        pnCRUD.setLayout(null);

        lbTitleBill.setBackground(new java.awt.Color(102, 102, 102));
        lbTitleBill.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lbTitleBill.setForeground(new java.awt.Color(102, 102, 102));
        lbTitleBill.setText("TÌM KIẾM");
        pnCRUD.add(lbTitleBill);
        lbTitleBill.setBounds(10, 10, 200, 30);

        cbbPrice.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cbbPrice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Dưới 10.000đ", "10.000 - 100.000đ", "100.000 - 200.000đ", "Trên 200.000đ" }));
        pnCRUD.add(cbbPrice);
        cbbPrice.setBounds(950, 5, 220, 40);

        tfSeacrh.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        tfSeacrh.setVerifyInputWhenFocusTarget(false);
        pnCRUD.add(tfSeacrh);
        tfSeacrh.setBounds(380, 5, 330, 40);

        cbbCategory.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        cbbCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nước uống", "Bia rượu", "Thực phẩm", "..." }));
        pnCRUD.add(cbbCategory);
        cbbCategory.setBounds(720, 5, 220, 40);
        cbbCategory.getAccessibleContext().setAccessibleName("");

        pnSearch.add(pnCRUD);
        pnCRUD.setBounds(0, 0, 1178, 50);

        pnCategori.setBackground(new java.awt.Color(255, 255, 255));
        pnCategori.setForeground(new java.awt.Color(51, 51, 51));
        pnCategori.setLayout(null);

        lbTitleListProduct.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lbTitleListProduct.setForeground(new java.awt.Color(40, 93, 179));
        lbTitleListProduct.setText("DANH SÁCH SẢN PHẨM");
        pnCategori.add(lbTitleListProduct);
        lbTitleListProduct.setBounds(20, 10, 250, 40);

        tableProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableProduct.setRowHeight(40);
        jScrollPane1.setViewportView(tableProduct);

        pnCategori.add(jScrollPane1);
        jScrollPane1.setBounds(20, 60, 610, 550);

        pnSearch.add(pnCategori);
        pnCategori.setBounds(0, 60, 650, 630);

        pnDetail.setBackground(new java.awt.Color(255, 255, 255));

        lbTitlleDetail.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lbTitlleDetail.setForeground(new java.awt.Color(40, 93, 179));
        lbTitlleDetail.setText("THÔNG TIN CHI TIẾT");

        tfMaSP.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        tfMaSP.setBorder(null);

        tfSLTon.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        tfSLTon.setForeground(new java.awt.Color(153, 0, 0));
        tfSLTon.setBorder(null);

        tfTenSP.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        tfTenSP.setBorder(null);

        tfGiaBan.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        tfGiaBan.setBorder(null);

        jlabel12.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jlabel12.setText("Loại sản phẩm");

        jlabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jlabel7.setText("Mã sản phẩm");

        jlabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jlabel8.setText("Tên sản phẩm");

        jlabel24.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jlabel24.setText("Số lượng tồn");

        jlabel9.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jlabel9.setText("Giá bán");

        jlabel11.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jlabel11.setText("Nhà cung cấp");

        tfNhaCC.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        tfNhaCC.setBorder(null);

        btnIMG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/product/empty-img.png"))); // NOI18N
        btnIMG.setToolTipText("");

        tfLoaiSP.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        tfLoaiSP.setBorder(null);

        lbSuggest.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        lbSuggest.setForeground(new java.awt.Color(153, 0, 51));

        jlabel14.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jlabel14.setText("Mô tả");

        tfMoTa.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        tfMoTa.setBorder(null);

        javax.swing.GroupLayout pnDetailLayout = new javax.swing.GroupLayout(pnDetail);
        pnDetail.setLayout(pnDetailLayout);
        pnDetailLayout.setHorizontalGroup(
            pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDetailLayout.createSequentialGroup()
                .addGroup(pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnDetailLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lbTitlleDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnDetailLayout.createSequentialGroup()
                        .addGroup(pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnDetailLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jlabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnDetailLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfNhaCC, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(tfTenSP, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(tfGiaBan, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(tfSLTon, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(tfLoaiSP, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(tfMaSP)))
                    .addGroup(pnDetailLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbSuggest))
                    .addGroup(pnDetailLayout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(btnIMG, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnDetailLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jlabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tfMoTa, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        pnDetailLayout.setVerticalGroup(
            pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDetailLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lbTitlleDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnIMG, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlabel7)
                    .addComponent(tfMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlabel8)
                    .addComponent(tfTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlabel9)
                    .addComponent(tfGiaBan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlabel24)
                    .addComponent(tfSLTon, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlabel11)
                    .addComponent(tfNhaCC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlabel14)
                    .addComponent(tfMoTa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lbSuggest)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        pnSearch.add(pnDetail);
        pnDetail.setBounds(668, 60, 500, 630);

        getContentPane().add(pnSearch);
        pnSearch.setBounds(0, 0, 1180, 720);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(searchScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(searchScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(searchScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(searchScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new searchScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIMG;
    private javax.swing.JComboBox<String> cbbCategory;
    private javax.swing.JComboBox<String> cbbPrice;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlabel11;
    private javax.swing.JLabel jlabel12;
    private javax.swing.JLabel jlabel14;
    private javax.swing.JLabel jlabel24;
    private javax.swing.JLabel jlabel7;
    private javax.swing.JLabel jlabel8;
    private javax.swing.JLabel jlabel9;
    private javax.swing.JLabel lbSuggest;
    private javax.swing.JLabel lbTitleBill;
    private javax.swing.JLabel lbTitleListProduct;
    private javax.swing.JLabel lbTitlleDetail;
    private javax.swing.JPanel pnCRUD;
    private javax.swing.JPanel pnCategori;
    private javax.swing.JPanel pnDetail;
    private javax.swing.JPanel pnSearch;
    private javax.swing.JTable tableProduct;
    private javax.swing.JTextField tfGiaBan;
    private javax.swing.JTextField tfLoaiSP;
    private javax.swing.JTextField tfMaSP;
    private javax.swing.JTextField tfMoTa;
    private javax.swing.JTextField tfNhaCC;
    private javax.swing.JTextField tfSLTon;
    private javax.swing.JTextField tfSeacrh;
    private javax.swing.JTextField tfTenSP;
    // End of variables declaration//GEN-END:variables

    private void loadScreen() {
        setResizable(false);
        loadProducts();
        editTable();
        editCombobox();
        editButton();
        loadCategories();
        tableProduct.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int row = tableProduct.getSelectedRow();
                if (row >= 0) {
                    int id = Integer.parseInt(tableProduct.getValueAt(row, 0).toString());
                    loadProductDetails(id);
                }
            }
        });
        tfSeacrh.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) {loadProducts();}
            public void removeUpdate(DocumentEvent e) {loadProducts();}
            public void changedUpdate(DocumentEvent e) { loadProducts();}
        });
        cbbCategory.addActionListener(e -> {loadProducts();});
        cbbPrice.addActionListener(e -> {loadProducts();});
    }

    private void editTable() {
        JTableHeader header = tableProduct.getTableHeader();
        header.setFont(new Font("Arial", Font.BOLD, 14));
        header.setBackground(Color.LIGHT_GRAY);
        header.setForeground(Color.BLACK);
        DefaultTableCellRenderer headerRenderer = (DefaultTableCellRenderer) tableProduct.getTableHeader().getDefaultRenderer();
        headerRenderer.setHorizontalAlignment(JLabel.CENTER);
        Object[][] data = {};
        Object[] columnNames = {"Mã sản phẩm", "Sản phẩm", "Loại sản phẩm"};
        TableModel model = new DefaultTableModel(data, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        this.tableProduct.setModel(model);
    }

    private void editCombobox() {
        cbbCategory.setBackground(Color.WHITE);
        cbbPrice.setBackground(Color.WHITE);
    }

    private void editButton() {
        btnIMG.setContentAreaFilled(false);
    }
}
