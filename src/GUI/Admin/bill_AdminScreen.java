/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.Admin;

import DAO.HoaDonDAO;
import DAO.KhachHangDAO;
import DAO.NhanVienDAO;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;


import javax.swing.JOptionPane;
import modal.KhachHang;
import modal.NhanVien;

/**
 *
 * @author Minh
 */
public class bill_AdminScreen extends javax.swing.JFrame {

    mainAdminScreen ms;
    KhachHangDAO KH = new KhachHangDAO();
    NhanVienDAO NV = new NhanVienDAO();
    HoaDonDAO HD = new HoaDonDAO();
    DefaultTableModel model;
    List<KhachHang> DSKh;
    List<NhanVien> DSNV;
    /**
     * Creates new form productFrame
     */
    public bill_AdminScreen(mainAdminScreen m) {
        initComponents();
        DSKh = KH.getAll();
        DSNV = NV.getAll("");
        Calendar cal = Calendar.getInstance();
        cal.add(Calendar.DATE, -31); // Trừ 1 ngày
        Date yesterday = cal.getTime();
        dtpkStart.setDate(yesterday);
        dtpkEnd.setDate(new Date());
        ms = m;
        loadScreen();
        
    }

    private void loadCombos() {
    
        cbbCustomer.removeAllItems();
        cbbCustomer.addItem("Tất cả khách hàng");
        for(KhachHang x : DSKh)
            cbbCustomer.addItem(x.getHoTen());
        cbbEmployee.removeAllItems();
        cbbEmployee.addItem("Tất cả nhân viên");
        for(NhanVien x : DSNV)
            cbbEmployee.addItem(x.getHoTen());
    }

    private void loadBillList() {
        model.setRowCount(0);
        String nv="",kh="";
        if(cbbCustomer.getSelectedIndex()!=0)
            nv = " kh.maKhachHang = "+KH.findIDByName(cbbCustomer.getSelectedItem().toString())+" and ";
        if(cbbEmployee.getSelectedIndex()!=0)
            kh = "  nv.maNhanVien = "+NV.findIDByName(cbbEmployee.getSelectedItem().toString())+" and ";
        Date dateA = dtpkStart.getDate();
        Date dateB = dtpkEnd.getDate();
        if (dateA == null || dateB == null) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn đầy đủ ngày!");
            return;
        } else if (!dateA.before(dateB)) {
            JOptionPane.showMessageDialog(null, "Chỉnh thòi gian khôgn hợp lệ","",JOptionPane.ERROR_MESSAGE);
            return;
        } 
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String tg =" cast(hd.ngayLap as date) between '"+ sdf.format(dateA)+ "' and '"+sdf.format(dateB)+"'";
        String tt ="";
        if(cbbPrice.getSelectedIndex()==1) tt=" and dbo.TinhTongTienHoaDon(maHoaDon) < 100000 ";
        else if(cbbPrice.getSelectedIndex()==2) tt=" and dbo.TinhTongTienHoaDon(maHoaDon) between 100000 and 300000 ";
        else if(cbbPrice.getSelectedIndex()==3) tt=" and dbo.TinhTongTienHoaDon(maHoaDon) >= 300000 ";
        String order = " order by kh.maKhachHang asc";
        if(cbbSort.getSelectedIndex()==0) order = " order by hd.maHoaDon asc";
        else if(cbbSort.getSelectedIndex()==1) order = " order by nv.maNhanVien asc";
        else if(cbbSort.getSelectedIndex()==3) order = " order by hd.ngayLap asc";
        else if(cbbSort.getSelectedIndex()==4) order = " order by dbo.TinhTongTienHoaDon(maHoaDon) asc";
        else if(cbbSort.getSelectedIndex()==5) order = " order by hd.trangthai asc";
        List<String> l =HD.selectAll_condition_admin(nv+kh+tg+tt+order); 
        for(String x : l)
        {
            String[] t = x.split("#");
            String[] tgi = t[3].split(" ");
            String[] NG = tgi[0].split("-");
            t[3] = NG[2]+"/"+NG[1]+"/"+NG[0]+"-"+tgi[1].substring(0,8);
             model.addRow(new Object[]{t[0],t[1],t[2],t[3],t[4],t[5],"xem"});
        }
        tableBill.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnMain = new javax.swing.JPanel();
        pnCRUD = new javax.swing.JPanel();
        lbTitleBill = new javax.swing.JLabel();
        btnPrintDetail = new javax.swing.JButton();
        pnDetailBill = new javax.swing.JPanel();
        cbbSort = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnDecor = new javax.swing.JButton();
        cbbEmployee = new javax.swing.JComboBox<>();
        cbbCustomer = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableBill = new javax.swing.JTable();
        dtpkEnd = new com.toedter.calendar.JDateChooser();
        dtpkStart = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbbPrice = new javax.swing.JComboBox<>();

        setResizable(false);
        setSize(new java.awt.Dimension(1200, 750));
        getContentPane().setLayout(null);

        pnMain.setBackground(new java.awt.Color(245, 247, 250));
        pnMain.setPreferredSize(new java.awt.Dimension(1200, 720));
        pnMain.setLayout(null);

        pnCRUD.setBackground(new java.awt.Color(204, 204, 255));
        pnCRUD.setForeground(new java.awt.Color(255, 255, 255));
        pnCRUD.setRequestFocusEnabled(false);
        pnCRUD.setLayout(null);

        lbTitleBill.setBackground(new java.awt.Color(102, 102, 102));
        lbTitleBill.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lbTitleBill.setForeground(new java.awt.Color(102, 102, 102));
        lbTitleBill.setText("HÓA ĐƠN MUA HÀNG");
        pnCRUD.add(lbTitleBill);
        lbTitleBill.setBounds(10, 10, 200, 30);

        btnPrintDetail.setBackground(new java.awt.Color(204, 204, 255));
        btnPrintDetail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/employee/printer.png"))); // NOI18N
        btnPrintDetail.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 204, 255), 1, true));
        btnPrintDetail.setBorderPainted(false);
        btnPrintDetail.setFocusPainted(false);
        btnPrintDetail.setFocusable(false);
        pnCRUD.add(btnPrintDetail);
        btnPrintDetail.setBounds(1130, 5, 40, 40);

        pnMain.add(pnCRUD);
        pnCRUD.setBounds(0, 0, 1180, 50);

        pnDetailBill.setBackground(new java.awt.Color(255, 255, 255));

        cbbSort.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cbbSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã hóa đơn", "Nhân viên", "Khách hàng ", "Thời gian", "Tổng tiền", "Trạng thái" }));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Sắp xếp theo");

        btnDecor.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnDecor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/employee/filters.png"))); // NOI18N
        btnDecor.setText("Tất cả");
        btnDecor.setBorder(null);
        btnDecor.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        cbbEmployee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cbbEmployee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả nhân viên", "Nguyen Van A", "Tran Van B" }));

        cbbCustomer.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cbbCustomer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả khách hàng", "Nguyễn Văn A", "Tăng Hữu Minh", " " }));

        tableBill.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        tableBill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableBill.setRowHeight(40);
        tableBill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableBillMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableBill);

        dtpkEnd.setBackground(new java.awt.Color(255, 255, 255));
        dtpkEnd.setDateFormatString("dd/MM/yyyy");

        dtpkStart.setBackground(new java.awt.Color(255, 255, 255));
        dtpkStart.setDateFormatString("dd/MM/yyyy");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Bắt đầu");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Kết thúc");

        cbbPrice.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cbbPrice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Dưới 100.000", "100.000 đến 300.000", "Trên 300.000" }));

        javax.swing.GroupLayout pnDetailBillLayout = new javax.swing.GroupLayout(pnDetailBill);
        pnDetailBill.setLayout(pnDetailBillLayout);
        pnDetailBillLayout.setHorizontalGroup(
            pnDetailBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDetailBillLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(pnDetailBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnDetailBillLayout.createSequentialGroup()
                        .addComponent(cbbEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dtpkStart, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dtpkEnd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDetailBillLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnDecor, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbbSort, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        pnDetailBillLayout.setVerticalGroup(
            pnDetailBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDetailBillLayout.createSequentialGroup()
                .addGroup(pnDetailBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnDetailBillLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnDecor, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnDetailBillLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(pnDetailBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbbSort, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnDetailBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dtpkEnd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbbEmployee, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(dtpkStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbbCustomer)
                    .addComponent(cbbPrice))
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnMain.add(pnDetailBill);
        pnDetailBill.setBounds(0, 50, 1170, 670);

        getContentPane().add(pnMain);
        pnMain.setBounds(0, 0, 1180, 750);
        pnMain.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableBillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBillMouseClicked
        int row = tableBill.getSelectedRow();
        if (row != -1) {
            if(tableBill.getSelectedColumn()==6)
            {
            ms.billID = Integer.parseInt(tableBill.getValueAt(row, 0).toString());
            ms.openInternalFrame("CHI TIẾT HÓA ĐƠN");    
            }
            
        } 
        else {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn một hóa đơn trước!");
        }
    }//GEN-LAST:event_tableBillMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(bill_AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(bill_AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(bill_AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(bill_AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new bill_AdminScreen(new mainAdminScreen()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDecor;
    private javax.swing.JButton btnPrintDetail;
    private javax.swing.JComboBox<String> cbbCustomer;
    private javax.swing.JComboBox<String> cbbEmployee;
    private javax.swing.JComboBox<String> cbbPrice;
    private javax.swing.JComboBox<String> cbbSort;
    private com.toedter.calendar.JDateChooser dtpkEnd;
    private com.toedter.calendar.JDateChooser dtpkStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbTitleBill;
    private javax.swing.JPanel pnCRUD;
    private javax.swing.JPanel pnDetailBill;
    private javax.swing.JPanel pnMain;
    private javax.swing.JTable tableBill;
    // End of variables declaration//GEN-END:variables

    

    private void loadScreen() {
        getContentPane().setBackground(Color.WHITE);
        setResizable(false);
        setSize(new Dimension(1200, 750));
        btnDecor.setContentAreaFilled(false);
        editCombobox();
        editTable();
        loadCombos();
        loadBillList();

        ActionListener reload = e -> loadBillList();
        cbbCustomer.addActionListener(reload);
        cbbEmployee.addActionListener(reload);
        cbbSort.addActionListener(reload);
        cbbPrice.addActionListener(reload);
        dtpkEnd.getDateEditor().addPropertyChangeListener("date", new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                loadBillList();
               
            }
        });
        dtpkStart.getDateEditor().addPropertyChangeListener("date", new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                loadBillList();
               
            }
        });
   
    }

    private void editCombobox() {
        cbbCustomer.setBackground(Color.WHITE);
        cbbEmployee.setBackground(Color.WHITE);
        cbbSort.setBackground(Color.WHITE);
        cbbPrice.setBackground(Color.WHITE);
    }

    private void editTable() {

         Object[] columnNames = {"Mã HĐ",
                    "Khách hàng",
                    "Nhân viên",
                    "Ngày lập",
                    "Tổng tiền",
                    "Trạng thái","Chi tiết"};
        model = new DefaultTableModel(columnNames, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tableBill.setModel(model);
        JTableHeader header = tableBill.getTableHeader();
        header.setFont(new Font("Arial", Font.BOLD, 14));
        header.setBackground(Color.LIGHT_GRAY);
        header.setForeground(Color.BLACK);
        ((DefaultTableCellRenderer) header.getDefaultRenderer())
            .setHorizontalAlignment(JLabel.CENTER);
               
      
        DefaultTableCellRenderer resetRenderer = new DefaultTableCellRenderer();
        resetRenderer.setHorizontalAlignment(JLabel.CENTER);
        resetRenderer.setForeground(Color.RED);
        resetRenderer.setFont(new Font("Arial", Font.BOLD, 12));
        tableBill.getColumn("Ngày lập").setCellRenderer(resetRenderer);
        tableBill.getColumn("Tổng tiền").setCellRenderer(resetRenderer);
        tableBill.getColumn("Trạng thái").setCellRenderer(resetRenderer);
        tableBill.getColumn("Chi tiết").setCellRenderer(resetRenderer);
    }

}
